{"version":3,"sources":["../../src/serializer/serializer.js"],"names":["t","Serializer","constructor","realm","serializerOptions","useAbstractInterpretation","generator","logger","internalDebug","statistics","modules","logModules","delayUnsupportedRequires","accelerateUnsupportedRequires","functions","additionalFunctions","moduleTracer","trace","tracers","push","options","react","usedReactElementKeys","Set","_execute","sources","sourceMaps","res","code","$GlobalEnv","executeSources","ast","realmPreludeGenerator","preludeGenerator","forbiddenNames","nameGenerator","node","isIdentifier","add","name","context","pushContext","logCompletion","popContext","diagnostic","location","handleError","init","timingStats","profile","undefined","totalTime","Date","now","globalCodeTime","hasErrors","resolveInitializedModules","checkThatFunctionsAreIndependent","reactStatistics","enabled","checkRootReactComponentTrees","initializeMoreModules","initializeMoreModulesTime","additionalFunctionValuesAndEffects","getAdditionalFunctionValuesToEffects","deepTraversalTime","referentializer","createNameGenerator","residualHeapVisitor","visitRoots","residualHeapValueIdentifiers","values","keys","heapGraph","heapGraphFormat","heapRefCounter","heapGraphGenerator","getResult","generateResult","inlineExpressions","referenceCountsTime","initPass1","inspector","functionInstances","classMethodInstances","functionInfos","referencedDeclaredValues","additionalFunctionValueInfos","declarativeEnvironmentRecordsBindings","generatorParents","serialize","initPass2","serializePassTime","TargetSerializer","lazyObjectsRuntime","residualHeapSerializer","stripFlow","generated","logStatistics","log","map"],"mappings":"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","file":"serializer.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm, ExecutionContext } from \"../realm.js\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\nimport type { SourceFile } from \"../types.js\";\nimport { AbruptCompletion } from \"../completions.js\";\nimport { Generator } from \"../utils/generator.js\";\nimport generate from \"babel-generator\";\nimport traverseFast from \"../utils/traverse-fast.js\";\nimport invariant from \"../invariant.js\";\nimport type { SerializerOptions } from \"../options.js\";\nimport { TimingStatistics, SerializerStatistics, ReactStatistics } from \"./types.js\";\nimport type { ReactSerializerState, SerializedResult } from \"./types.js\";\nimport { Functions } from \"./functions.js\";\nimport { Logger } from \"../utils/logger.js\";\nimport { Modules } from \"../utils/modules.js\";\nimport { stripFlowTypeAnnotations } from \"../utils/flow.js\";\nimport { LoggingTracer } from \"./LoggingTracer.js\";\nimport { ResidualHeapVisitor } from \"./ResidualHeapVisitor.js\";\nimport { ResidualHeapSerializer } from \"./ResidualHeapSerializer.js\";\nimport { ResidualHeapValueIdentifiers } from \"./ResidualHeapValueIdentifiers.js\";\nimport { LazyObjectsSerializer } from \"./LazyObjectsSerializer.js\";\nimport * as t from \"babel-types\";\nimport { ResidualHeapRefCounter } from \"./ResidualHeapRefCounter\";\nimport { ResidualHeapGraphGenerator } from \"./ResidualHeapGraphGenerator\";\nimport { Referentializer } from \"./Referentializer.js\";\n\nexport class Serializer {\n  constructor(realm: Realm, serializerOptions: SerializerOptions = {}) {\n    invariant(realm.useAbstractInterpretation);\n    // Start tracking mutations\n    realm.generator = new Generator(realm, \"main\");\n\n    this.realm = realm;\n    this.logger = new Logger(this.realm, !!serializerOptions.internalDebug);\n    this.statistics = new SerializerStatistics();\n    this.modules = new Modules(\n      this.realm,\n      this.logger,\n      this.statistics,\n      !!serializerOptions.logModules,\n      !!serializerOptions.delayUnsupportedRequires,\n      !!serializerOptions.accelerateUnsupportedRequires\n    );\n    this.functions = new Functions(this.realm, serializerOptions.additionalFunctions, this.modules.moduleTracer);\n    if (serializerOptions.trace) this.realm.tracers.push(new LoggingTracer(this.realm));\n\n    this.options = serializerOptions;\n    this.react = {\n      usedReactElementKeys: new Set(),\n    };\n  }\n\n  realm: Realm;\n  functions: Functions;\n  logger: Logger;\n  modules: Modules;\n  options: SerializerOptions;\n  statistics: SerializerStatistics;\n  react: ReactSerializerState;\n\n  _execute(sources: Array<SourceFile>, sourceMaps?: boolean = false): { [string]: string } {\n    let realm = this.realm;\n    let [res, code] = realm.$GlobalEnv.executeSources(sources, \"script\", ast => {\n      let realmPreludeGenerator = realm.preludeGenerator;\n      invariant(realmPreludeGenerator);\n      let forbiddenNames = realmPreludeGenerator.nameGenerator.forbiddenNames;\n      traverseFast(ast, node => {\n        if (!t.isIdentifier(node)) return false;\n\n        forbiddenNames.add(((node: any): BabelNodeIdentifier).name);\n        return true;\n      });\n    });\n\n    if (res instanceof AbruptCompletion) {\n      let context = new ExecutionContext();\n      realm.pushContext(context);\n      try {\n        this.logger.logCompletion(res);\n      } finally {\n        realm.popContext(context);\n      }\n      let diagnostic = new CompilerDiagnostic(\"Global code may end abruptly\", res.location, \"PP0016\", \"FatalError\");\n      realm.handleError(diagnostic);\n      throw new FatalError();\n    }\n    return code;\n  }\n\n  init(sources: Array<SourceFile>, sourceMaps?: boolean = false): void | SerializedResult {\n    // Phase 1: Let's interpret.\n    let timingStats = this.options.profile ? new TimingStatistics() : undefined;\n    if (timingStats !== undefined) {\n      timingStats.totalTime = Date.now();\n      timingStats.globalCodeTime = Date.now();\n    }\n    let code = this._execute(sources);\n    if (timingStats !== undefined) timingStats.globalCodeTime = Date.now() - timingStats.globalCodeTime;\n    if (this.logger.hasErrors()) return undefined;\n    this.modules.resolveInitializedModules();\n    this.functions.checkThatFunctionsAreIndependent();\n    let reactStatistics = null;\n    if (this.realm.react.enabled) {\n      reactStatistics = new ReactStatistics();\n      this.functions.checkRootReactComponentTrees(reactStatistics, this.react);\n    }\n\n    if (this.options.initializeMoreModules) {\n      if (timingStats !== undefined) timingStats.initializeMoreModulesTime = Date.now();\n      this.modules.initializeMoreModules();\n      if (this.logger.hasErrors()) return undefined;\n      if (timingStats !== undefined)\n        timingStats.initializeMoreModulesTime = Date.now() - timingStats.initializeMoreModulesTime;\n    }\n\n    let additionalFunctionValuesAndEffects = this.functions.getAdditionalFunctionValuesToEffects();\n\n    // Deep traversal of the heap to identify the necessary scope of residual functions\n    if (timingStats !== undefined) timingStats.deepTraversalTime = Date.now();\n    let preludeGenerator = this.realm.preludeGenerator;\n    invariant(preludeGenerator !== undefined);\n    let referentializer = new Referentializer(\n      this.realm,\n      this.options,\n      preludeGenerator.createNameGenerator(\"__scope_\"),\n      preludeGenerator.createNameGenerator(\"$\"),\n      this.statistics\n    );\n    let residualHeapVisitor = new ResidualHeapVisitor(\n      this.realm,\n      this.logger,\n      this.modules,\n      additionalFunctionValuesAndEffects,\n      referentializer\n    );\n    residualHeapVisitor.visitRoots();\n    if (this.logger.hasErrors()) return undefined;\n    if (timingStats !== undefined) timingStats.deepTraversalTime = Date.now() - timingStats.deepTraversalTime;\n\n    const realmPreludeGenerator = this.realm.preludeGenerator;\n    invariant(realmPreludeGenerator);\n    const residualHeapValueIdentifiers = new ResidualHeapValueIdentifiers(\n      residualHeapVisitor.values.keys(),\n      realmPreludeGenerator\n    );\n\n    let heapGraph;\n    if (this.options.heapGraphFormat) {\n      const heapRefCounter = new ResidualHeapRefCounter(\n        this.realm,\n        this.logger,\n        this.modules,\n        additionalFunctionValuesAndEffects,\n        referentializer\n      );\n      heapRefCounter.visitRoots();\n\n      const heapGraphGenerator = new ResidualHeapGraphGenerator(\n        this.realm,\n        this.logger,\n        this.modules,\n        additionalFunctionValuesAndEffects,\n        residualHeapValueIdentifiers,\n        heapRefCounter.getResult(),\n        referentializer\n      );\n      heapGraphGenerator.visitRoots();\n      invariant(this.options.heapGraphFormat);\n      heapGraph = heapGraphGenerator.generateResult(this.options.heapGraphFormat);\n    }\n\n    // Phase 2: Let's serialize the heap and generate code.\n    // Serialize for the first time in order to gather reference counts\n\n    if (this.options.inlineExpressions) {\n      if (timingStats !== undefined) timingStats.referenceCountsTime = Date.now();\n      residualHeapValueIdentifiers.initPass1();\n      new ResidualHeapSerializer(\n        this.realm,\n        this.logger,\n        this.modules,\n        residualHeapValueIdentifiers,\n        residualHeapVisitor.inspector,\n        residualHeapVisitor.values,\n        residualHeapVisitor.functionInstances,\n        residualHeapVisitor.classMethodInstances,\n        residualHeapVisitor.functionInfos,\n        this.options,\n        residualHeapVisitor.referencedDeclaredValues,\n        additionalFunctionValuesAndEffects,\n        residualHeapVisitor.additionalFunctionValueInfos,\n        residualHeapVisitor.declarativeEnvironmentRecordsBindings,\n        this.statistics,\n        this.react,\n        referentializer,\n        residualHeapVisitor.generatorParents\n      ).serialize();\n      if (this.logger.hasErrors()) return undefined;\n      if (timingStats !== undefined) timingStats.referenceCountsTime = Date.now() - timingStats.referenceCountsTime;\n      residualHeapValueIdentifiers.initPass2();\n    }\n\n    // Serialize for a second time, using reference counts to minimize number of generated identifiers\n    if (timingStats !== undefined) timingStats.serializePassTime = Date.now();\n    const TargetSerializer = this.options.lazyObjectsRuntime != null ? LazyObjectsSerializer : ResidualHeapSerializer;\n    let residualHeapSerializer = new TargetSerializer(\n      this.realm,\n      this.logger,\n      this.modules,\n      residualHeapValueIdentifiers,\n      residualHeapVisitor.inspector,\n      residualHeapVisitor.values,\n      residualHeapVisitor.functionInstances,\n      residualHeapVisitor.classMethodInstances,\n      residualHeapVisitor.functionInfos,\n      this.options,\n      residualHeapVisitor.referencedDeclaredValues,\n      additionalFunctionValuesAndEffects,\n      residualHeapVisitor.additionalFunctionValueInfos,\n      residualHeapVisitor.declarativeEnvironmentRecordsBindings,\n      this.statistics,\n      this.react,\n      referentializer,\n      residualHeapVisitor.generatorParents\n    );\n\n    let ast = residualHeapSerializer.serialize();\n    if (this.realm.stripFlow) {\n      stripFlowTypeAnnotations(ast);\n    }\n\n    // the signature for generate is not complete, hence the any\n    let generated = generate(ast, { sourceMaps: sourceMaps }, (code: any));\n    if (timingStats !== undefined) {\n      timingStats.serializePassTime = Date.now() - timingStats.serializePassTime;\n      timingStats.totalTime = Date.now() - timingStats.totalTime;\n    }\n    invariant(!this.logger.hasErrors());\n    if (this.options.logStatistics) residualHeapSerializer.statistics.log();\n    return {\n      code: generated.code,\n      map: generated.map,\n      reactStatistics,\n      statistics: residualHeapSerializer.statistics,\n      timingStats: timingStats,\n      heapGraph,\n    };\n  }\n}\n"]}