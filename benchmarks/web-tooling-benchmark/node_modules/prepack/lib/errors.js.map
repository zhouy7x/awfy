{"version":3,"sources":["../src/errors.js"],"names":["CompilerDiagnostic","Error","constructor","message","location","errorCode","severity","FatalError"],"mappings":";;;;;;;AAiBA;AACA;AAlBA;;;;;;;;;AAmBO,MAAMA,kBAAN,SAAiCC,KAAjC,CAAuC;AAC5CC,cAAYC,OAAZ,EAA6BC,QAA7B,EAAiEC,SAAjE,EAAoFC,QAApF,EAAwG;AACtG,UAAMH,OAAN;;AAEA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKE,QAAL,GAAgBA,QAAhB;AACA,SAAKD,SAAL,GAAiBA,SAAjB;AACD;;AAP2C;;QAAjCL,kB,GAAAA,kB,EAeb;AACA;AACA;;AACO,MAAMO,UAAN,SAAyBN,KAAzB,CAA+B;AACpCC,cAAYC,OAAZ,EAA8B;AAC5B,UAAMA,WAAW,0CAAjB;AACD;AAHmC;;QAAzBI,U,GAAAA,U","file":"errors.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeSourceLocation } from \"babel-types\";\n\nexport type Severity = \"FatalError\" | \"RecoverableError\" | \"Warning\" | \"Information\";\nexport type ErrorHandlerResult = \"Fail\" | \"Recover\";\nexport type ErrorCode = \"PP0001\";\n\n// This is the error format used to report errors to the caller-supplied\n// error-handler\nexport class CompilerDiagnostic extends Error {\n  constructor(message: string, location: ?BabelNodeSourceLocation, errorCode: string, severity: Severity) {\n    super(message);\n\n    this.location = location;\n    this.severity = severity;\n    this.errorCode = errorCode;\n  }\n\n  callStack: void | string;\n  location: ?BabelNodeSourceLocation;\n  severity: Severity;\n  errorCode: string;\n}\n\n// This error is thrown to exit Prepack when an ErrorHandler returns 'FatalError'\n// This should just be a class but Babel classes doesn't work with\n// built-in super classes.\nexport class FatalError extends Error {\n  constructor(message?: string) {\n    super(message || \"A fatal error occurred while prepacking.\");\n  }\n}\n\nexport type ErrorHandler = (error: CompilerDiagnostic) => ErrorHandlerResult;\n"]}