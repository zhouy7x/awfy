{"version":3,"sources":["../src/prepack-options.js"],"names":["getRealmOptions","getSerializerOptions","getDebuggerOptions","abstractEffectsInAdditionalFunctions","compatibility","debugNames","errorHandler","mathRandomSeed","omitInvariants","emitConcreteModel","uniqueSuffix","reactEnabled","reactOutput","residual","serialize","check","strictlyMonotonicDateNow","stripFlow","timeout","maxStackDepth","additionalFunctions","lazyObjectsRuntime","heapGraphFormat","delayInitializations","delayUnsupportedRequires","accelerateUnsupportedRequires","internalDebug","debugScopes","debugIdentifiers","logStatistics","logModules","profile","inlineExpressions","simpleClosures","initializeMoreModules","trace","result","undefined","debugInFilePath","debugOutFilePath","inFilePath","outFilePath"],"mappings":";;;;;QA2DgBA,e,GAAAA,e;QAwCAC,oB,GAAAA,oB;QA2CAC,kB,GAAAA,kB;;AAjIhB;;AACA;;;;;;AAdA;;;;;;;;;AA2DO,SAASF,eAAT,CAAyB;AAC9BG,yCAAuC,KADT;AAE9BC,kBAAgB,SAFc;AAG9BC,eAAa,KAHiB;AAI9BC,cAJ8B;AAK9BC,gBAL8B;AAM9BC,mBAAiB,KANa;AAO9BC,sBAAoB,KAPU;AAQ9BC,cAR8B;AAS9BC,cAT8B;AAU9BC,aAV8B;AAW9BC,UAX8B;AAY9BC,cAAY,CAACD,QAZiB;AAa9BE,OAb8B;AAc9BC,0BAd8B;AAe9BC,WAf8B;AAgB9BC,SAhB8B;AAiB9BC;AAjB8B,CAAzB,EAkB0B;AAC/B,SAAO;AACLhB,wCADK;AAELC,iBAFK;AAGLC,cAHK;AAILC,gBAJK;AAKLC,kBALK;AAMLC,kBANK;AAOLC,qBAPK;AAQLC,gBARK;AASLC,gBATK;AAULC,eAVK;AAWLC,YAXK;AAYLC,aAZK;AAaLC,SAbK;AAcLC,4BAdK;AAeLC,aAfK;AAgBLC,WAhBK;AAiBLC;AAjBK,GAAP;AAmBD;;AAEM,SAASlB,oBAAT,CAA8B;AACnCmB,qBADmC;AAEnCC,oBAFmC;AAGnCC,iBAHmC;AAInCC,yBAAuB,KAJY;AAKnCC,6BAA2B,KALQ;AAMnCC,kCAAgC,IANG;AAOnCC,kBAAgB,KAPmB;AAQnCC,gBAAc,KARqB;AASnCC,kBATmC;AAUnCC,kBAAgB,KAVmB;AAWnCC,eAAa,KAXsB;AAYnCC,YAAU,KAZyB;AAanCC,sBAAoB,KAbe;AAcnCC,mBAAiB,KAdkB;AAenCC,0BAAwB,KAfW;AAgBnCC,UAAQ;AAhB2B,CAA9B,EAiB+B;AACpC,MAAIC,SAA4B;AAC9Bb,wBAD8B;AAE9BC,4BAF8B;AAG9BC,iCAH8B;AAI9BS,yBAJ8B;AAK9BR,iBAL8B;AAM9BC,eAN8B;AAO9BC,oBAP8B;AAQ9BC,iBAR8B;AAS9BC,cAT8B;AAU9BC,WAV8B;AAW9BC,qBAX8B;AAY9BC,kBAZ8B;AAa9BE;AAb8B,GAAhC;AAeA,MAAIf,mBAAJ,EAAyBgB,OAAOhB,mBAAP,GAA6BA,mBAA7B;AACzB,MAAIC,uBAAuBgB,SAA3B,EAAsC;AACpCD,WAAOf,kBAAP,GAA4BA,kBAA5B;AACD;AACD,MAAIC,oBAAoBe,SAAxB,EAAmC;AACjCD,WAAOd,eAAP,GAAyBA,eAAzB;AACD;AACD,SAAOc,MAAP;AACD;;AAEM,SAASlC,kBAAT,CAA4B,EAAEoC,eAAF,EAAmBC,gBAAnB,EAA5B,EAAoG;AACzG,2BAAUD,oBAAoBD,SAA9B,EAAyC,0CAAzC;AACA,2BAAUE,qBAAqBF,SAA/B,EAA0C,2CAA1C;AACA,MAAID,SAA0B;AAC5BI,gBAAYF,eADgB;AAE5BG,iBAAaF;AAFe,GAA9B;AAIA,SAAOH,MAAP;AACD","file":"prepack-options.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { ErrorHandler } from \"./errors.js\";\nimport type { SerializerOptions, RealmOptions, Compatibility, DebuggerOptions, ReactOutputTypes } from \"./options\";\nimport { Realm } from \"./realm.js\";\nimport invariant from \"./invariant.js\";\n\nexport type PrepackOptions = {|\n  additionalGlobals?: Realm => void,\n  additionalFunctions?: Array<string>,\n  abstractEffectsInAdditionalFunctions?: boolean,\n  lazyObjectsRuntime?: string,\n  heapGraphFormat?: \"DotLanguage\" | \"VISJS\",\n  compatibility?: Compatibility,\n  debugNames?: boolean,\n  delayInitializations?: boolean,\n  delayUnsupportedRequires?: boolean,\n  accelerateUnsupportedRequires?: boolean,\n  inputSourceMapFilename?: string,\n  internalDebug?: boolean,\n  debugScopes?: boolean,\n  debugIdentifiers?: Array<string>,\n  logStatistics?: boolean,\n  logModules?: boolean,\n  mathRandomSeed?: string,\n  errorHandler?: ErrorHandler,\n  omitInvariants?: boolean,\n  emitConcreteModel?: boolean,\n  outputFilename?: string,\n  profile?: boolean,\n  reactEnabled?: boolean,\n  reactOutput?: ReactOutputTypes,\n  residual?: boolean,\n  serialize?: boolean,\n  check?: Array<number>,\n  inlineExpressions?: boolean,\n  simpleClosures?: boolean,\n  sourceMaps?: boolean,\n  initializeMoreModules?: boolean,\n  statsFile?: string,\n  strictlyMonotonicDateNow?: boolean,\n  stripFlow?: boolean,\n  timeout?: number,\n  trace?: boolean,\n  uniqueSuffix?: string,\n  maxStackDepth?: number,\n  debugInFilePath?: string,\n  debugOutFilePath?: string,\n|};\n\nexport function getRealmOptions({\n  abstractEffectsInAdditionalFunctions = false,\n  compatibility = \"browser\",\n  debugNames = false,\n  errorHandler,\n  mathRandomSeed,\n  omitInvariants = false,\n  emitConcreteModel = false,\n  uniqueSuffix,\n  reactEnabled,\n  reactOutput,\n  residual,\n  serialize = !residual,\n  check,\n  strictlyMonotonicDateNow,\n  stripFlow,\n  timeout,\n  maxStackDepth,\n}: PrepackOptions): RealmOptions {\n  return {\n    abstractEffectsInAdditionalFunctions,\n    compatibility,\n    debugNames,\n    errorHandler,\n    mathRandomSeed,\n    omitInvariants,\n    emitConcreteModel,\n    uniqueSuffix,\n    reactEnabled,\n    reactOutput,\n    residual,\n    serialize,\n    check,\n    strictlyMonotonicDateNow,\n    stripFlow,\n    timeout,\n    maxStackDepth,\n  };\n}\n\nexport function getSerializerOptions({\n  additionalFunctions,\n  lazyObjectsRuntime,\n  heapGraphFormat,\n  delayInitializations = false,\n  delayUnsupportedRequires = false,\n  accelerateUnsupportedRequires = true,\n  internalDebug = false,\n  debugScopes = false,\n  debugIdentifiers,\n  logStatistics = false,\n  logModules = false,\n  profile = false,\n  inlineExpressions = false,\n  simpleClosures = false,\n  initializeMoreModules = false,\n  trace = false,\n}: PrepackOptions): SerializerOptions {\n  let result: SerializerOptions = {\n    delayInitializations,\n    delayUnsupportedRequires,\n    accelerateUnsupportedRequires,\n    initializeMoreModules,\n    internalDebug,\n    debugScopes,\n    debugIdentifiers,\n    logStatistics,\n    logModules,\n    profile,\n    inlineExpressions,\n    simpleClosures,\n    trace,\n  };\n  if (additionalFunctions) result.additionalFunctions = additionalFunctions;\n  if (lazyObjectsRuntime !== undefined) {\n    result.lazyObjectsRuntime = lazyObjectsRuntime;\n  }\n  if (heapGraphFormat !== undefined) {\n    result.heapGraphFormat = heapGraphFormat;\n  }\n  return result;\n}\n\nexport function getDebuggerOptions({ debugInFilePath, debugOutFilePath }: PrepackOptions): DebuggerOptions {\n  invariant(debugInFilePath !== undefined, \"Debugger invoked without input file path\");\n  invariant(debugOutFilePath !== undefined, \"Debugger invoked without output file path\");\n  let result: DebuggerOptions = {\n    inFilePath: debugInFilePath,\n    outFilePath: debugOutFilePath,\n  };\n  return result;\n}\n"]}